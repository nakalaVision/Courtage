<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Annonce extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Annonce_model');
    } 

    /*
     * Listing of annonces
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('annonce/index?');
        $config['total_rows'] = $this->Annonce_model->get_all_annonces_count();
        $this->pagination->initialize($config);

        $data['annonces'] = $this->Annonce_model->get_all_annonces($params);
        
        $data['_view'] = 'annonce/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new annonce
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('titre','Titre','required');
		$this->form_validation->set_rules('prix','Prix','required');
		$this->form_validation->set_rules('description','Description','required');
		$this->form_validation->set_rules('datecreation','Datecreation','required');
		$this->form_validation->set_rules('idCategories','IdCategories','required');
		$this->form_validation->set_rules('idTypeAnnonce','IdTypeAnnonce','required');
		$this->form_validation->set_rules('idUtilisateurs','IdUtilisateurs','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'degree' => $this->input->post('degree'),
				'visible' => $this->input->post('visible'),
				'vendu' => $this->input->post('vendu'),
				'idCategories' => $this->input->post('idCategories'),
				'idTypeAnnonce' => $this->input->post('idTypeAnnonce'),
				'idUtilisateurs' => $this->input->post('idUtilisateurs'),
				'titre' => $this->input->post('titre'),
				'prix' => $this->input->post('prix'),
				'description' => $this->input->post('description'),
				'datecreation' => $this->input->post('datecreation'),
				'dateupdate' => $this->input->post('dateupdate'),
				'dateexpiration' => $this->input->post('dateexpiration'),
            );
            
            $annonce_id = $this->Annonce_model->add_annonce($params);
            redirect('annonce/index');
        }
        else
        {
			$this->load->model('Category_model');
			$data['all_categories'] = $this->Category_model->get_all_categories();

			$this->load->model('Typeannonce_model');
			$data['all_typeannonce'] = $this->Typeannonce_model->get_all_typeannonce();

			$this->load->model('Utilisateur_model');
			$data['all_utilisateurs'] = $this->Utilisateur_model->get_all_utilisateurs();
            
            $data['_view'] = 'annonce/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a annonce
     */
    function edit($idannonces)
    {   
        // check if the annonce exists before trying to edit it
        $data['annonce'] = $this->Annonce_model->get_annonce($idannonces);
        
        if(isset($data['annonce']['idannonces']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('titre','Titre','required');
			$this->form_validation->set_rules('prix','Prix','required');
			$this->form_validation->set_rules('description','Description','required');
			$this->form_validation->set_rules('datecreation','Datecreation','required');
			$this->form_validation->set_rules('idCategories','IdCategories','required');
			$this->form_validation->set_rules('idTypeAnnonce','IdTypeAnnonce','required');
			$this->form_validation->set_rules('idUtilisateurs','IdUtilisateurs','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'degree' => $this->input->post('degree'),
					'visible' => $this->input->post('visible'),
					'vendu' => $this->input->post('vendu'),
					'idCategories' => $this->input->post('idCategories'),
					'idTypeAnnonce' => $this->input->post('idTypeAnnonce'),
					'idUtilisateurs' => $this->input->post('idUtilisateurs'),
					'titre' => $this->input->post('titre'),
					'prix' => $this->input->post('prix'),
					'description' => $this->input->post('description'),
					'datecreation' => $this->input->post('datecreation'),
					'dateupdate' => $this->input->post('dateupdate'),
					'dateexpiration' => $this->input->post('dateexpiration'),
                );

                $this->Annonce_model->update_annonce($idannonces,$params);            
                redirect('annonce/index');
            }
            else
            {
				$this->load->model('Category_model');
				$data['all_categories'] = $this->Category_model->get_all_categories();

				$this->load->model('Typeannonce_model');
				$data['all_typeannonce'] = $this->Typeannonce_model->get_all_typeannonce();

				$this->load->model('Utilisateur_model');
				$data['all_utilisateurs'] = $this->Utilisateur_model->get_all_utilisateurs();

                $data['_view'] = 'annonce/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The annonce you are trying to edit does not exist.');
    } 

    /*
     * Deleting annonce
     */
    function remove($idannonces)
    {
        $annonce = $this->Annonce_model->get_annonce($idannonces);

        // check if the annonce exists before trying to delete it
        if(isset($annonce['idannonces']))
        {
            $this->Annonce_model->delete_annonce($idannonces);
            redirect('annonce/index');
        }
        else
            show_error('The annonce you are trying to delete does not exist.');
    }
    
}

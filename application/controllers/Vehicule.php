<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Vehicule extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Vehicule_model');
    } 

    /*
     * Listing of vehicules
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('vehicule/index?');
        $config['total_rows'] = $this->Vehicule_model->get_all_vehicules_count();
        $this->pagination->initialize($config);

        $data['vehicules'] = $this->Vehicule_model->get_all_vehicules($params);
        
        $data['_view'] = 'vehicule/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new vehicule
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('libelleVehicule','LibelleVehicule','required');
		$this->form_validation->set_rules('marque','Marque','required');
		$this->form_validation->set_rules('modele','Modele','required');
		$this->form_validation->set_rules('datecirculation','Datecirculation','required');
		$this->form_validation->set_rules('kilometrage','Kilometrage','required');
		$this->form_validation->set_rules('energie','Energie','required');
		$this->form_validation->set_rules('boiteVitesse','BoiteVitesse','required');
		$this->form_validation->set_rules('idCategories','IdCategories','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'idCategories' => $this->input->post('idCategories'),
				'libelleVehicule' => $this->input->post('libelleVehicule'),
				'marque' => $this->input->post('marque'),
				'modele' => $this->input->post('modele'),
				'datecirculation' => $this->input->post('datecirculation'),
				'kilometrage' => $this->input->post('kilometrage'),
				'energie' => $this->input->post('energie'),
				'boiteVitesse' => $this->input->post('boiteVitesse'),
            );
            
            $vehicule_id = $this->Vehicule_model->add_vehicule($params);
            redirect('vehicule/index');
        }
        else
        {
			$this->load->model('Category_model');
			$data['all_categories'] = $this->Category_model->get_all_categories();
            
            $data['_view'] = 'vehicule/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a vehicule
     */
    function edit($idVehicules)
    {   
        // check if the vehicule exists before trying to edit it
        $data['vehicule'] = $this->Vehicule_model->get_vehicule($idVehicules);
        
        if(isset($data['vehicule']['idVehicules']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('libelleVehicule','LibelleVehicule','required');
			$this->form_validation->set_rules('marque','Marque','required');
			$this->form_validation->set_rules('modele','Modele','required');
			$this->form_validation->set_rules('datecirculation','Datecirculation','required');
			$this->form_validation->set_rules('kilometrage','Kilometrage','required');
			$this->form_validation->set_rules('energie','Energie','required');
			$this->form_validation->set_rules('boiteVitesse','BoiteVitesse','required');
			$this->form_validation->set_rules('idCategories','IdCategories','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'idCategories' => $this->input->post('idCategories'),
					'libelleVehicule' => $this->input->post('libelleVehicule'),
					'marque' => $this->input->post('marque'),
					'modele' => $this->input->post('modele'),
					'datecirculation' => $this->input->post('datecirculation'),
					'kilometrage' => $this->input->post('kilometrage'),
					'energie' => $this->input->post('energie'),
					'boiteVitesse' => $this->input->post('boiteVitesse'),
                );

                $this->Vehicule_model->update_vehicule($idVehicules,$params);            
                redirect('vehicule/index');
            }
            else
            {
				$this->load->model('Category_model');
				$data['all_categories'] = $this->Category_model->get_all_categories();

                $data['_view'] = 'vehicule/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The vehicule you are trying to edit does not exist.');
    } 

    /*
     * Deleting vehicule
     */
    function remove($idVehicules)
    {
        $vehicule = $this->Vehicule_model->get_vehicule($idVehicules);

        // check if the vehicule exists before trying to delete it
        if(isset($vehicule['idVehicules']))
        {
            $this->Vehicule_model->delete_vehicule($idVehicules);
            redirect('vehicule/index');
        }
        else
            show_error('The vehicule you are trying to delete does not exist.');
    }
    
}

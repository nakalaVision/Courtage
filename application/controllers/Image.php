<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Image extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Image_model');
    } 

    /*
     * Listing of images
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('image/index?');
        $config['total_rows'] = $this->Image_model->get_all_images_count();
        $this->pagination->initialize($config);

        $data['images'] = $this->Image_model->get_all_images($params);
        
        $data['_view'] = 'image/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new image
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('url','Url','required');
		$this->form_validation->set_rules('datecreation','Datecreation','required');
		$this->form_validation->set_rules('groupeRepertoire','GroupeRepertoire','required');
		$this->form_validation->set_rules('idAnnonces','IdAnnonces','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'idAnnonces' => $this->input->post('idAnnonces'),
				'url' => $this->input->post('url'),
				'alt' => $this->input->post('alt'),
				'datecreation' => $this->input->post('datecreation'),
				'groupeRepertoire' => $this->input->post('groupeRepertoire'),
            );
            
            $image_id = $this->Image_model->add_image($params);
            redirect('image/index');
        }
        else
        {
			$this->load->model('Annonce_model');
			$data['all_annonces'] = $this->Annonce_model->get_all_annonces();
            
            $data['_view'] = 'image/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a image
     */
    function edit($idImages)
    {   
        // check if the image exists before trying to edit it
        $data['image'] = $this->Image_model->get_image($idImages);
        
        if(isset($data['image']['idImages']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('url','Url','required');
			$this->form_validation->set_rules('datecreation','Datecreation','required');
			$this->form_validation->set_rules('groupeRepertoire','GroupeRepertoire','required');
			$this->form_validation->set_rules('idAnnonces','IdAnnonces','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'idAnnonces' => $this->input->post('idAnnonces'),
					'url' => $this->input->post('url'),
					'alt' => $this->input->post('alt'),
					'datecreation' => $this->input->post('datecreation'),
					'groupeRepertoire' => $this->input->post('groupeRepertoire'),
                );

                $this->Image_model->update_image($idImages,$params);            
                redirect('image/index');
            }
            else
            {
				$this->load->model('Annonce_model');
				$data['all_annonces'] = $this->Annonce_model->get_all_annonces();

                $data['_view'] = 'image/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The image you are trying to edit does not exist.');
    } 

    /*
     * Deleting image
     */
    function remove($idImages)
    {
        $image = $this->Image_model->get_image($idImages);

        // check if the image exists before trying to delete it
        if(isset($image['idImages']))
        {
            $this->Image_model->delete_image($idImages);
            redirect('image/index');
        }
        else
            show_error('The image you are trying to delete does not exist.');
    }
    
}
